Vagrant.configure("2") do |config|

  config.env.enable
  config.vm.boot_timeout = 1200

  config.vm.box = "ubuntu/bionic64"
  config.disksize.size = '60GB'
  config.vm.network "forwarded_port", guest: 81, host: 81
  config.vm.network "forwarded_port", guest: 80, host: 80
  config.vm.network "forwarded_port", guest: 3306, host: 3306
  config.vm.network "forwarded_port", guest: 8080, host: 8080
  config.vm.network "forwarded_port", guest: 9000, host: 9000
  config.vm.network "forwarded_port", guest: 19999, host: 19999
  config.vm.network "forwarded_port", guest: 9001, host:9001
  config.vm.network "private_network", ip: ENV['JENKINS_IP']

  config.vm.provider "virtualbox" do |vb|
    vb.memory = "4096"
    vb.cpus = 4
    vb.name = 'jenkins-srv'
    vb.customize ['modifyvm', :id, '--nicpromisc2', 'allow-all']
  end

  config.vm.provision "shell", inline: "sudo apt-get update && sudo apt-get install -y swapspace python python3-pip python-dev libmysqlclient-dev python3-venv build-essential libssl-dev libffi-dev unzip"

  $script_mysql = <<-SCRIPT
    apt-get update && \
    apt-get install -y openjdk-8-jdk  mysql-server-5.7 && \
    mysql -e "create user 'devops'@'%' identified by 'mestre';"  && \
    mysql -e "create user 'devops_dev'@'%' identified by 'mestre';"  && \
    mysql -e "create database todo;" && \
    mysql -e "create database todo_dev;" && \
    mysql -e "create database test_todo_dev;" && \
    mysql -e "grant all privileges on *.* to devops@'%' identified by 'mestre';" && \
    mysql -e "grant all privileges on *.* to devops_dev@'%' identified by 'mestre';" 
  SCRIPT

  config.vm.provision "shell", inline: $script_mysql
  config.vm.provision "shell", inline: "cat /configs/mysqld.cnf > /etc/mysql/mysql.conf.d/mysqld.cnf"
  config.vm.provision "shell", inline: "service mysql restart"
  config.vm.synced_folder "./configs", "/configs"

  config.vm.provision "shell", inline: "sudo chmod +x /vagrant/scripts/*"
  config.vm.provision "shell", inline: "sudo sh /vagrant/scripts/docker.sh"
  config.vm.provision "shell", inline: "sudo sh /vagrant/scripts/jenkins.sh"
  config.vm.provision "shell", inline: "sudo usermod -aG docker vagrant"
  config.vm.provision "shell", inline: "sudo usermod -aG docker jenkins"
  config.vm.provision "shell", inline: "sudo timedatectl set-timezone America/Sao_Paulo"
  config.vm.provision "shell", inline: "sudo cp /vagrant/configs/crontab.sh /etc/cron.hourly/"

  config.trigger.after [:provision] do |provision|
    provision.name = "Reboot after provisioning"
    provision.run = { :inline => "vagrant reload" }
  end

end